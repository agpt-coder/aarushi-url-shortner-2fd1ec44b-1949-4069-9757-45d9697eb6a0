// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  URLs URL[]
}

model URL {
  id          String   @id @default(cuid())
  originalUrl String
  alias       String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String

  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  AccessLogs AccessLog[]
  Analytics  Analytics?
}

model AccessLog {
  id         String   @id @default(cuid())
  urlId      String
  accessedAt DateTime @default(now())

  URL URL @relation(fields: [urlId], references: [id], onDelete: Cascade)
}

model Analytics {
  id         String   @id @default(cuid())
  urlId      String   @unique
  clickCount Int      @default(0)
  country    String?
  referral   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  URL URL @relation(fields: [urlId], references: [id])
}

enum Role {
  User
  Admin
  Premium
}

